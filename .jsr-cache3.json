{"package":"@logtape/logtape","version":"0.8.2","index":{"AnsiColor":{"id":"namespace_AnsiColor","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"AnsiColor","file":".","doc":"The ANSI colors.  These can be used to colorize text in the console.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColor","deprecated":false,"label":"AnsiColor"},"AnsiColorFormatterOptions":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"AnsiColorFormatterOptions","file":".","doc":"The various options for the ANSI color formatter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions","deprecated":false,"label":"AnsiColorFormatterOptions"},"AnsiColorFormatterOptions.timestamp":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.timestamp","file":".","doc":"The timestamp format.  This can be one of the following:\"date-time-timezone\": The date and time with the full timezone offset (e.g., \"2023-11-14 22:13:20.000 +00:00\").\"date-time-tz\": The date and time with the short timezone offset (e.g., \"2023-11-14 22:13:20.000 +00\").\"date-time\": The date and time without the timezone offset (e.g., \"2023-11-14 22:13:20.000\").\"time-timezone\": The time with the full timezone offset but without the date (e.g., \"22:13:20.000 +00:00\").\"time-tz\": The time with the short timezone offset but without the date (e.g., \"22:13:20.000 +00\").\"time\": The time without the date or timezone offset (e.g., \"22:13:20.000\").\"date\": The date without the time or timezone offset (e.g., \"2023-11-14\").\"rfc3339\": The date and time in RFC 3339 format (e.g., \"2023-11-14T22:13:20.000Z\").Alternatively, this can be a function that accepts a timestamp and returns a string.The default is \"date-time-tz\".","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.timestamp","deprecated":false,"label":"AnsiColorFormatterOptions.timestamp"},"~AnsiColorFormatterOptions.timestamp":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.timestamp","file":".","doc":"The timestamp format.  This can be one of the following:\"date-time-timezone\": The date and time with the full timezone offset (e.g., \"2023-11-14 22:13:20.000 +00:00\").\"date-time-tz\": The date and time with the short timezone offset (e.g., \"2023-11-14 22:13:20.000 +00\").\"date-time\": The date and time without the timezone offset (e.g., \"2023-11-14 22:13:20.000\").\"time-timezone\": The time with the full timezone offset but without the date (e.g., \"22:13:20.000 +00:00\").\"time-tz\": The time with the short timezone offset but without the date (e.g., \"22:13:20.000 +00\").\"time\": The time without the date or timezone offset (e.g., \"22:13:20.000\").\"date\": The date without the time or timezone offset (e.g., \"2023-11-14\").\"rfc3339\": The date and time in RFC 3339 format (e.g., \"2023-11-14T22:13:20.000Z\").Alternatively, this can be a function that accepts a timestamp and returns a string.The default is \"date-time-tz\".","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.timestamp","deprecated":false,"label":"timestamp"},"AnsiColorFormatterOptions.timestampStyle":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.timestampStyle","file":".","doc":"The ANSI style for the timestamp.  \"dim\" is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.timestampStyle","deprecated":false,"label":"AnsiColorFormatterOptions.timestampStyle"},"~AnsiColorFormatterOptions.timestampStyle":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.timestampStyle","file":".","doc":"The ANSI style for the timestamp.  \"dim\" is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.timestampStyle","deprecated":false,"label":"timestampStyle"},"AnsiColorFormatterOptions.timestampColor":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.timestampColor","file":".","doc":"The ANSI color for the timestamp.  No color is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.timestampColor","deprecated":false,"label":"AnsiColorFormatterOptions.timestampColor"},"~AnsiColorFormatterOptions.timestampColor":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.timestampColor","file":".","doc":"The ANSI color for the timestamp.  No color is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.timestampColor","deprecated":false,"label":"timestampColor"},"AnsiColorFormatterOptions.levelStyle":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.levelStyle","file":".","doc":"The ANSI style for the log level.  \"bold\" is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.levelStyle","deprecated":false,"label":"AnsiColorFormatterOptions.levelStyle"},"~AnsiColorFormatterOptions.levelStyle":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.levelStyle","file":".","doc":"The ANSI style for the log level.  \"bold\" is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.levelStyle","deprecated":false,"label":"levelStyle"},"AnsiColorFormatterOptions.levelColors":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.levelColors","file":".","doc":"The ANSI colors for the log levels.  The default colors are as follows:\"debug\": \"blue\"\"info\": \"green\"\"warning\": \"yellow\"\"error\": \"red\"\"fatal\": \"magenta\"","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.levelColors","deprecated":false,"label":"AnsiColorFormatterOptions.levelColors"},"~AnsiColorFormatterOptions.levelColors":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.levelColors","file":".","doc":"The ANSI colors for the log levels.  The default colors are as follows:\"debug\": \"blue\"\"info\": \"green\"\"warning\": \"yellow\"\"error\": \"red\"\"fatal\": \"magenta\"","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.levelColors","deprecated":false,"label":"levelColors"},"AnsiColorFormatterOptions.categoryStyle":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.categoryStyle","file":".","doc":"The ANSI style for the category.  \"dim\" is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.categoryStyle","deprecated":false,"label":"AnsiColorFormatterOptions.categoryStyle"},"~AnsiColorFormatterOptions.categoryStyle":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.categoryStyle","file":".","doc":"The ANSI style for the category.  \"dim\" is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.categoryStyle","deprecated":false,"label":"categoryStyle"},"AnsiColorFormatterOptions.categoryColor":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.categoryColor","file":".","doc":"The ANSI color for the category.  No color is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.categoryColor","deprecated":false,"label":"AnsiColorFormatterOptions.categoryColor"},"~AnsiColorFormatterOptions.categoryColor":{"id":"namespace_AnsiColorFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"AnsiColorFormatterOptions.categoryColor","file":".","doc":"The ANSI color for the category.  No color is used by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiColorFormatterOptions.categoryColor","deprecated":false,"label":"categoryColor"},"AnsiStyle":{"id":"namespace_AnsiStyle","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"AnsiStyle","file":".","doc":"The ANSI text styles.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/AnsiStyle","deprecated":false,"label":"AnsiStyle"},"Config":{"id":"namespace_Config","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"Config","file":".","doc":"A configuration for the loggers.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config","deprecated":false,"label":"Config"},"Config.sinks":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.sinks","file":".","doc":"The sinks to use.  The keys are the sink identifiers, and the values are Sinks.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.sinks","deprecated":false,"label":"Config.sinks"},"~Config.sinks":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.sinks","file":".","doc":"The sinks to use.  The keys are the sink identifiers, and the values are Sinks.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.sinks","deprecated":false,"label":"sinks"},"Config.filters":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.filters","file":".","doc":"The filters to use.  The keys are the filter identifiers, and the values are either Filters or LogLevels.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.filters","deprecated":false,"label":"Config.filters"},"~Config.filters":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.filters","file":".","doc":"The filters to use.  The keys are the filter identifiers, and the values are either Filters or LogLevels.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.filters","deprecated":false,"label":"filters"},"Config.loggers":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.loggers","file":".","doc":"The loggers to configure.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.loggers","deprecated":false,"label":"Config.loggers"},"~Config.loggers":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.loggers","file":".","doc":"The loggers to configure.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.loggers","deprecated":false,"label":"loggers"},"Config.contextLocalStorage":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.contextLocalStorage","file":".","doc":"The context-local storage to use for implicit contexts.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.contextLocalStorage","deprecated":false,"label":"Config.contextLocalStorage"},"~Config.contextLocalStorage":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.contextLocalStorage","file":".","doc":"The context-local storage to use for implicit contexts.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.contextLocalStorage","deprecated":false,"label":"contextLocalStorage"},"Config.reset":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.reset","file":".","doc":"Whether to reset the configuration before applying this one.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.reset","deprecated":false,"label":"Config.reset"},"~Config.reset":{"id":"namespace_Config","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Config.reset","file":".","doc":"Whether to reset the configuration before applying this one.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Config.reset","deprecated":false,"label":"reset"},"ConfigError":{"id":"namespace_ConfigError","kind":[{"char":"c","kind":"Class","title":"Class"}],"name":"ConfigError","file":".","doc":"A configuration error.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ConfigError","deprecated":false,"label":"ConfigError"},"new ConfigError":{"id":"namespace_ConfigError","kind":[{"char":"c","kind":"Class","title":"Class"}],"name":"ConfigError","file":".","doc":"A configuration error.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ConfigError#constructors","deprecated":false,"label":"new ConfigError"},"new ConfigError()":{"id":"namespace_ConfigError","kind":[{"char":"c","kind":"Class","title":"Class"}],"name":"ConfigError","file":".","doc":"A configuration error.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ConfigError#constructors","deprecated":false,"label":"new ConfigError"},"ConsoleFormatter":{"id":"namespace_ConsoleFormatter","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"ConsoleFormatter","file":".","doc":"A console formatter is a function that accepts a log record and returns an array of arguments to pass to console.log.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ConsoleFormatter","deprecated":false,"label":"ConsoleFormatter"},"ConsoleSinkOptions":{"id":"namespace_ConsoleSinkOptions","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"ConsoleSinkOptions","file":".","doc":"Options for the getConsoleSink function.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ConsoleSinkOptions","deprecated":false,"label":"ConsoleSinkOptions"},"ConsoleSinkOptions.formatter":{"id":"namespace_ConsoleSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"ConsoleSinkOptions.formatter","file":".","doc":"The console formatter or text formatter to use. Defaults to defaultConsoleFormatter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ConsoleSinkOptions.formatter","deprecated":false,"label":"ConsoleSinkOptions.formatter"},"~ConsoleSinkOptions.formatter":{"id":"namespace_ConsoleSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"ConsoleSinkOptions.formatter","file":".","doc":"The console formatter or text formatter to use. Defaults to defaultConsoleFormatter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ConsoleSinkOptions.formatter","deprecated":false,"label":"formatter"},"ConsoleSinkOptions.console":{"id":"namespace_ConsoleSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"ConsoleSinkOptions.console","file":".","doc":"The console to log to.  Defaults to console.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ConsoleSinkOptions.console","deprecated":false,"label":"ConsoleSinkOptions.console"},"~ConsoleSinkOptions.console":{"id":"namespace_ConsoleSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"ConsoleSinkOptions.console","file":".","doc":"The console to log to.  Defaults to console.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ConsoleSinkOptions.console","deprecated":false,"label":"console"},"ContextLocalStorage":{"id":"namespace_ContextLocalStorage","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"ContextLocalStorage","file":".","doc":"A generic interface for a context-local storage.  It resembles the AsyncLocalStorage API from Node.js.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ContextLocalStorage","deprecated":false,"label":"ContextLocalStorage"},"ContextLocalStorage.run()":{"id":"namespace_ContextLocalStorage","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"ContextLocalStorage.run","file":".","doc":"Runs a callback with the given store as the context-local store.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ContextLocalStorage.run","deprecated":false,"label":"ContextLocalStorage.run()"},"~ContextLocalStorage.run()":{"id":"namespace_ContextLocalStorage","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"ContextLocalStorage.run","file":".","doc":"Runs a callback with the given store as the context-local store.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ContextLocalStorage.run","deprecated":false,"label":"run()"},"ContextLocalStorage.run":{"id":"namespace_ContextLocalStorage","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"ContextLocalStorage.run","file":".","doc":"Runs a callback with the given store as the context-local store.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ContextLocalStorage.run","deprecated":false,"label":"ContextLocalStorage.run"},"~ContextLocalStorage.run":{"id":"namespace_ContextLocalStorage","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"ContextLocalStorage.run","file":".","doc":"Runs a callback with the given store as the context-local store.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ContextLocalStorage.run","deprecated":false,"label":"run"},"ContextLocalStorage.getStore()":{"id":"namespace_ContextLocalStorage","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"ContextLocalStorage.getStore","file":".","doc":"Returns the current context-local store.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ContextLocalStorage.getStore","deprecated":false,"label":"ContextLocalStorage.getStore()"},"~ContextLocalStorage.getStore()":{"id":"namespace_ContextLocalStorage","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"ContextLocalStorage.getStore","file":".","doc":"Returns the current context-local store.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ContextLocalStorage.getStore","deprecated":false,"label":"getStore()"},"ContextLocalStorage.getStore":{"id":"namespace_ContextLocalStorage","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"ContextLocalStorage.getStore","file":".","doc":"Returns the current context-local store.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ContextLocalStorage.getStore","deprecated":false,"label":"ContextLocalStorage.getStore"},"~ContextLocalStorage.getStore":{"id":"namespace_ContextLocalStorage","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"ContextLocalStorage.getStore","file":".","doc":"Returns the current context-local store.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ContextLocalStorage.getStore","deprecated":false,"label":"getStore"},"FileSinkOptions":{"id":"namespace_FileSinkOptions","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"FileSinkOptions","file":".","doc":"Options for the getFileSink function.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FileSinkOptions","deprecated":false,"label":"FileSinkOptions"},"Filter":{"id":"namespace_Filter","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Filter","file":".","doc":"A filter is a function that accepts a log record and returns true if the record should be passed to the sink.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Filter","deprecated":false,"label":"Filter"},"FilterLike":{"id":"namespace_FilterLike","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"FilterLike","file":".","doc":"A filter-like value is either a Filter or a LogLevel. null is also allowed to represent a filter that rejects all records.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FilterLike","deprecated":false,"label":"FilterLike"},"FormattedValues":{"id":"namespace_FormattedValues","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"FormattedValues","file":".","doc":"The formatted values for a log record.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues","deprecated":false,"label":"FormattedValues"},"FormattedValues.timestamp":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.timestamp","file":".","doc":"The formatted timestamp.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.timestamp","deprecated":false,"label":"FormattedValues.timestamp"},"~FormattedValues.timestamp":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.timestamp","file":".","doc":"The formatted timestamp.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.timestamp","deprecated":false,"label":"timestamp"},"FormattedValues.level":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.level","file":".","doc":"The formatted log level.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.level","deprecated":false,"label":"FormattedValues.level"},"~FormattedValues.level":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.level","file":".","doc":"The formatted log level.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.level","deprecated":false,"label":"level"},"FormattedValues.category":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.category","file":".","doc":"The formatted category.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.category","deprecated":false,"label":"FormattedValues.category"},"~FormattedValues.category":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.category","file":".","doc":"The formatted category.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.category","deprecated":false,"label":"category"},"FormattedValues.message":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.message","file":".","doc":"The formatted message.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.message","deprecated":false,"label":"FormattedValues.message"},"~FormattedValues.message":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.message","file":".","doc":"The formatted message.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.message","deprecated":false,"label":"message"},"FormattedValues.record":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.record","file":".","doc":"The unformatted log record.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.record","deprecated":false,"label":"FormattedValues.record"},"~FormattedValues.record":{"id":"namespace_FormattedValues","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"FormattedValues.record","file":".","doc":"The unformatted log record.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/FormattedValues.record","deprecated":false,"label":"record"},"LogLevel":{"id":"namespace_LogLevel","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"LogLevel","file":".","doc":"The severity level of a LogRecord.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogLevel","deprecated":false,"label":"LogLevel"},"LogRecord":{"id":"namespace_LogRecord","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"LogRecord","file":".","doc":"A log record.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord","deprecated":false,"label":"LogRecord"},"LogRecord.category":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.category","file":".","doc":"The category of the logger that produced the log record.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.category","deprecated":false,"label":"LogRecord.category"},"~LogRecord.category":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.category","file":".","doc":"The category of the logger that produced the log record.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.category","deprecated":false,"label":"category"},"LogRecord.level":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.level","file":".","doc":"The log level.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.level","deprecated":false,"label":"LogRecord.level"},"~LogRecord.level":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.level","file":".","doc":"The log level.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.level","deprecated":false,"label":"level"},"LogRecord.message":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.message","file":".","doc":"The log message.  This is the result of substituting the message template with the values.  The number of elements in this array is always odd, with the message template values interleaved between the substitution values.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.message","deprecated":false,"label":"LogRecord.message"},"~LogRecord.message":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.message","file":".","doc":"The log message.  This is the result of substituting the message template with the values.  The number of elements in this array is always odd, with the message template values interleaved between the substitution values.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.message","deprecated":false,"label":"message"},"LogRecord.rawMessage":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.rawMessage","file":".","doc":"The raw log message.  This is the original message template without any further processing.  It can be either:A string without any substitutions if the log record was created with a method call syntax, e.g., \"Hello, {name}!\" for logger.info(\"Hello, {name}!\", { name }).A template string array if the log record was created with a tagged template literal syntax, e.g., [\"Hello, \", \"!\"] for ``logger.info`Hello, ${name}!```.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.rawMessage","deprecated":false,"label":"LogRecord.rawMessage"},"~LogRecord.rawMessage":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.rawMessage","file":".","doc":"The raw log message.  This is the original message template without any further processing.  It can be either:A string without any substitutions if the log record was created with a method call syntax, e.g., \"Hello, {name}!\" for logger.info(\"Hello, {name}!\", { name }).A template string array if the log record was created with a tagged template literal syntax, e.g., [\"Hello, \", \"!\"] for ``logger.info`Hello, ${name}!```.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.rawMessage","deprecated":false,"label":"rawMessage"},"LogRecord.timestamp":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.timestamp","file":".","doc":"The timestamp of the log record in milliseconds since the Unix epoch.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.timestamp","deprecated":false,"label":"LogRecord.timestamp"},"~LogRecord.timestamp":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.timestamp","file":".","doc":"The timestamp of the log record in milliseconds since the Unix epoch.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.timestamp","deprecated":false,"label":"timestamp"},"LogRecord.properties":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.properties","file":".","doc":"The extra properties of the log record.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.properties","deprecated":false,"label":"LogRecord.properties"},"~LogRecord.properties":{"id":"namespace_LogRecord","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LogRecord.properties","file":".","doc":"The extra properties of the log record.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LogRecord.properties","deprecated":false,"label":"properties"},"Logger":{"id":"namespace_Logger","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"Logger","file":".","doc":"A logger interface.  It provides methods to log messages at different severity levels.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger","deprecated":false,"label":"Logger"},"Logger.getChild()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.getChild","file":".","doc":"Get a child logger with the given subcategory.The above code is equivalent to:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.getChild","deprecated":false,"label":"Logger.getChild()"},"~Logger.getChild()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.getChild","file":".","doc":"Get a child logger with the given subcategory.The above code is equivalent to:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.getChild","deprecated":false,"label":"getChild()"},"Logger.getChild":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.getChild","file":".","doc":"Get a child logger with the given subcategory.The above code is equivalent to:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.getChild","deprecated":false,"label":"Logger.getChild"},"~Logger.getChild":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.getChild","file":".","doc":"Get a child logger with the given subcategory.The above code is equivalent to:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.getChild","deprecated":false,"label":"getChild"},"Logger.with()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.with","file":".","doc":"Get a logger with contextual properties.  This is useful for log multiple messages with the shared set of properties.The above code is equivalent to:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.with","deprecated":false,"label":"Logger.with()"},"~Logger.with()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.with","file":".","doc":"Get a logger with contextual properties.  This is useful for log multiple messages with the shared set of properties.The above code is equivalent to:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.with","deprecated":false,"label":"with()"},"Logger.with":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.with","file":".","doc":"Get a logger with contextual properties.  This is useful for log multiple messages with the shared set of properties.The above code is equivalent to:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.with","deprecated":false,"label":"Logger.with"},"~Logger.with":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.with","file":".","doc":"Get a logger with contextual properties.  This is useful for log multiple messages with the shared set of properties.The above code is equivalent to:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.with","deprecated":false,"label":"with"},"Logger.debug()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.debug","file":".","doc":"Log a debug message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.debug","deprecated":false,"label":"Logger.debug()"},"~Logger.debug()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.debug","file":".","doc":"Log a debug message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.debug","deprecated":false,"label":"debug()"},"Logger.debug":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.debug","file":".","doc":"Log a debug message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.debug","deprecated":false,"label":"Logger.debug"},"~Logger.debug":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.debug","file":".","doc":"Log a debug message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.debug","deprecated":false,"label":"debug"},"Logger.info()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.info","file":".","doc":"Log an informational message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.info","deprecated":false,"label":"Logger.info()"},"~Logger.info()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.info","file":".","doc":"Log an informational message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.info","deprecated":false,"label":"info()"},"Logger.info":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.info","file":".","doc":"Log an informational message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.info","deprecated":false,"label":"Logger.info"},"~Logger.info":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.info","file":".","doc":"Log an informational message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.info","deprecated":false,"label":"info"},"Logger.warn()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.warn","file":".","doc":"Log a warning message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.warn","deprecated":false,"label":"Logger.warn()"},"~Logger.warn()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.warn","file":".","doc":"Log a warning message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.warn","deprecated":false,"label":"warn()"},"Logger.warn":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.warn","file":".","doc":"Log a warning message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.warn","deprecated":false,"label":"Logger.warn"},"~Logger.warn":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.warn","file":".","doc":"Log a warning message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.warn","deprecated":false,"label":"warn"},"Logger.error()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.error","file":".","doc":"Log an error message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.error","deprecated":false,"label":"Logger.error()"},"~Logger.error()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.error","file":".","doc":"Log an error message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.error","deprecated":false,"label":"error()"},"Logger.error":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.error","file":".","doc":"Log an error message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.error","deprecated":false,"label":"Logger.error"},"~Logger.error":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.error","file":".","doc":"Log an error message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.error","deprecated":false,"label":"error"},"Logger.fatal()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.fatal","file":".","doc":"Log a fatal error message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.fatal","deprecated":false,"label":"Logger.fatal()"},"~Logger.fatal()":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.fatal","file":".","doc":"Log a fatal error message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.fatal","deprecated":false,"label":"fatal()"},"Logger.fatal":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.fatal","file":".","doc":"Log a fatal error message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.fatal","deprecated":false,"label":"Logger.fatal"},"~Logger.fatal":{"id":"namespace_Logger","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"Logger.fatal","file":".","doc":"Log a fatal error message.  Use this as a template string prefix.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.fatal","deprecated":false,"label":"fatal"},"Logger.category":{"id":"namespace_Logger","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Logger.category","file":".","doc":"The category of the logger.  It is an array of strings.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.category","deprecated":false,"label":"Logger.category"},"~Logger.category":{"id":"namespace_Logger","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Logger.category","file":".","doc":"The category of the logger.  It is an array of strings.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.category","deprecated":false,"label":"category"},"Logger.parent":{"id":"namespace_Logger","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Logger.parent","file":".","doc":"The logger with the supercategory of the current logger.  If the current logger is the root logger, this is null.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.parent","deprecated":false,"label":"Logger.parent"},"~Logger.parent":{"id":"namespace_Logger","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"Logger.parent","file":".","doc":"The logger with the supercategory of the current logger.  If the current logger is the root logger, this is null.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Logger.parent","deprecated":false,"label":"parent"},"LoggerConfig":{"id":"namespace_LoggerConfig","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"LoggerConfig","file":".","doc":"A logger configuration.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig","deprecated":false,"label":"LoggerConfig"},"LoggerConfig.category":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.category","file":".","doc":"The category of the logger.  If a string, it is equivalent to an array with one element.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.category","deprecated":false,"label":"LoggerConfig.category"},"~LoggerConfig.category":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.category","file":".","doc":"The category of the logger.  If a string, it is equivalent to an array with one element.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.category","deprecated":false,"label":"category"},"LoggerConfig.sinks":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.sinks","file":".","doc":"The sink identifiers to use.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.sinks","deprecated":false,"label":"LoggerConfig.sinks"},"~LoggerConfig.sinks":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.sinks","file":".","doc":"The sink identifiers to use.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.sinks","deprecated":false,"label":"sinks"},"LoggerConfig.parentSinks":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.parentSinks","file":".","doc":"Whether to inherit the parent's sinks.  If inherit, the parent's sinks are used along with the specified sinks.  If override, the parent's sinks are not used, and only the specified sinks are used.The default is inherit.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.parentSinks","deprecated":false,"label":"LoggerConfig.parentSinks"},"~LoggerConfig.parentSinks":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.parentSinks","file":".","doc":"Whether to inherit the parent's sinks.  If inherit, the parent's sinks are used along with the specified sinks.  If override, the parent's sinks are not used, and only the specified sinks are used.The default is inherit.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.parentSinks","deprecated":false,"label":"parentSinks"},"LoggerConfig.filters":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.filters","file":".","doc":"The filter identifiers to use.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.filters","deprecated":false,"label":"LoggerConfig.filters"},"~LoggerConfig.filters":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.filters","file":".","doc":"The filter identifiers to use.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.filters","deprecated":false,"label":"filters"},"LoggerConfig.level":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.level","file":".","doc":"The log level to filter by.  If null, the logger will reject all records.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.level","deprecated":true,"label":"LoggerConfig.level"},"~LoggerConfig.level":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.level","file":".","doc":"The log level to filter by.  If null, the logger will reject all records.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.level","deprecated":true,"label":"level"},"LoggerConfig.lowestLevel":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.lowestLevel","file":".","doc":"The lowest log level to accept.  If null, the logger will reject all records.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.lowestLevel","deprecated":false,"label":"LoggerConfig.lowestLevel"},"~LoggerConfig.lowestLevel":{"id":"namespace_LoggerConfig","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"LoggerConfig.lowestLevel","file":".","doc":"The lowest log level to accept.  If null, the logger will reject all records.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/LoggerConfig.lowestLevel","deprecated":false,"label":"lowestLevel"},"RotatingFileSinkOptions":{"id":"namespace_RotatingFileSinkOptions","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"RotatingFileSinkOptions","file":".","doc":"Options for the getRotatingFileSink function.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/RotatingFileSinkOptions","deprecated":false,"label":"RotatingFileSinkOptions"},"RotatingFileSinkOptions.maxSize":{"id":"namespace_RotatingFileSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"RotatingFileSinkOptions.maxSize","file":".","doc":"The maximum bytes of the file before it is rotated.  1 MiB by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/RotatingFileSinkOptions.maxSize","deprecated":false,"label":"RotatingFileSinkOptions.maxSize"},"~RotatingFileSinkOptions.maxSize":{"id":"namespace_RotatingFileSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"RotatingFileSinkOptions.maxSize","file":".","doc":"The maximum bytes of the file before it is rotated.  1 MiB by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/RotatingFileSinkOptions.maxSize","deprecated":false,"label":"maxSize"},"RotatingFileSinkOptions.maxFiles":{"id":"namespace_RotatingFileSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"RotatingFileSinkOptions.maxFiles","file":".","doc":"The maximum number of files to keep.  5 by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/RotatingFileSinkOptions.maxFiles","deprecated":false,"label":"RotatingFileSinkOptions.maxFiles"},"~RotatingFileSinkOptions.maxFiles":{"id":"namespace_RotatingFileSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"RotatingFileSinkOptions.maxFiles","file":".","doc":"The maximum number of files to keep.  5 by default.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/RotatingFileSinkOptions.maxFiles","deprecated":false,"label":"maxFiles"},"Sink":{"id":"namespace_Sink","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"Sink","file":".","doc":"A sink is a function that accepts a log record and prints it somewhere. Thrown exceptions will be suppressed and then logged to the meta logger, a Logger with the category [\"logtape\", \"meta\"].  (In that case, the meta log record will not be passed to the sink to avoid infinite recursion.)","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/Sink","deprecated":false,"label":"Sink"},"StreamSinkOptions":{"id":"namespace_StreamSinkOptions","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"StreamSinkOptions","file":".","doc":"Options for the getStreamSink function.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/StreamSinkOptions","deprecated":false,"label":"StreamSinkOptions"},"StreamSinkOptions.formatter":{"id":"namespace_StreamSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"StreamSinkOptions.formatter","file":".","doc":"The text formatter to use.  Defaults to defaultTextFormatter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/StreamSinkOptions.formatter","deprecated":false,"label":"StreamSinkOptions.formatter"},"~StreamSinkOptions.formatter":{"id":"namespace_StreamSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"StreamSinkOptions.formatter","file":".","doc":"The text formatter to use.  Defaults to defaultTextFormatter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/StreamSinkOptions.formatter","deprecated":false,"label":"formatter"},"StreamSinkOptions.encoder":{"id":"namespace_StreamSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"StreamSinkOptions.encoder","file":".","doc":"The text encoder to use.  Defaults to an instance of TextEncoder.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/StreamSinkOptions.encoder","deprecated":false,"label":"StreamSinkOptions.encoder"},"~StreamSinkOptions.encoder":{"id":"namespace_StreamSinkOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"StreamSinkOptions.encoder","file":".","doc":"The text encoder to use.  Defaults to an instance of TextEncoder.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/StreamSinkOptions.encoder","deprecated":false,"label":"encoder"},"StreamSinkOptions.encoder.encode()":{"id":"namespace_StreamSinkOptions","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"StreamSinkOptions.encoder.encode","file":".","doc":"","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/StreamSinkOptions.encoder.encode","deprecated":false,"label":"StreamSinkOptions.encoder.encode()"},"~StreamSinkOptions.encoder.encode()":{"id":"namespace_StreamSinkOptions","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"StreamSinkOptions.encoder.encode","file":".","doc":"","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/StreamSinkOptions.encoder.encode","deprecated":false,"label":"encoder.encode()"},"StreamSinkOptions.encoder.encode":{"id":"namespace_StreamSinkOptions","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"StreamSinkOptions.encoder.encode","file":".","doc":"","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/StreamSinkOptions.encoder.encode","deprecated":false,"label":"StreamSinkOptions.encoder.encode"},"~StreamSinkOptions.encoder.encode":{"id":"namespace_StreamSinkOptions","kind":[{"char":"m","kind":"Method","title":"Method"}],"name":"StreamSinkOptions.encoder.encode","file":".","doc":"","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/StreamSinkOptions.encoder.encode","deprecated":false,"label":"encoder.encode"},"TextFormatter":{"id":"namespace_TextFormatter","kind":[{"char":"T","kind":"TypeAlias","title":"Type Alias"}],"name":"TextFormatter","file":".","doc":"A text formatter is a function that accepts a log record and returns a string.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatter","deprecated":false,"label":"TextFormatter"},"TextFormatterOptions":{"id":"namespace_TextFormatterOptions","kind":[{"char":"I","kind":"Interface","title":"Interface"}],"name":"TextFormatterOptions","file":".","doc":"The various options for the built-in text formatters.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions","deprecated":false,"label":"TextFormatterOptions"},"TextFormatterOptions.timestamp":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.timestamp","file":".","doc":"The timestamp format.  This can be one of the following:\"date-time-timezone\": The date and time with the full timezone offset (e.g., \"2023-11-14 22:13:20.000 +00:00\").\"date-time-tz\": The date and time with the short timezone offset (e.g., \"2023-11-14 22:13:20.000 +00\").\"date-time\": The date and time without the timezone offset (e.g., \"2023-11-14 22:13:20.000\").\"time-timezone\": The time with the full timezone offset but without the date (e.g., \"22:13:20.000 +00:00\").\"time-tz\": The time with the short timezone offset but without the date (e.g., \"22:13:20.000 +00\").\"time\": The time without the date or timezone offset (e.g., \"22:13:20.000\").\"date\": The date without the time or timezone offset (e.g., \"2023-11-14\").\"rfc3339\": The date and time in RFC 3339 format (e.g., \"2023-11-14T22:13:20.000Z\").Alternatively, this can be a function that accepts a timestamp and returns a string.The default is \"date-time-timezone\".","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.timestamp","deprecated":false,"label":"TextFormatterOptions.timestamp"},"~TextFormatterOptions.timestamp":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.timestamp","file":".","doc":"The timestamp format.  This can be one of the following:\"date-time-timezone\": The date and time with the full timezone offset (e.g., \"2023-11-14 22:13:20.000 +00:00\").\"date-time-tz\": The date and time with the short timezone offset (e.g., \"2023-11-14 22:13:20.000 +00\").\"date-time\": The date and time without the timezone offset (e.g., \"2023-11-14 22:13:20.000\").\"time-timezone\": The time with the full timezone offset but without the date (e.g., \"22:13:20.000 +00:00\").\"time-tz\": The time with the short timezone offset but without the date (e.g., \"22:13:20.000 +00\").\"time\": The time without the date or timezone offset (e.g., \"22:13:20.000\").\"date\": The date without the time or timezone offset (e.g., \"2023-11-14\").\"rfc3339\": The date and time in RFC 3339 format (e.g., \"2023-11-14T22:13:20.000Z\").Alternatively, this can be a function that accepts a timestamp and returns a string.The default is \"date-time-timezone\".","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.timestamp","deprecated":false,"label":"timestamp"},"TextFormatterOptions.level":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.level","file":".","doc":"The log level format.  This can be one of the following:\"ABBR\": The log level abbreviation in uppercase (e.g., \"INF\").\"FULL\": The full log level name in uppercase (e.g., \"INFO\").\"L\": The first letter of the log level in uppercase (e.g., \"I\").\"abbr\": The log level abbreviation in lowercase (e.g., \"inf\").\"full\": The full log level name in lowercase (e.g., \"info\").\"l\": The first letter of the log level in lowercase (e.g., \"i\").Alternatively, this can be a function that accepts a log level and returns a string.The default is \"ABBR\".","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.level","deprecated":false,"label":"TextFormatterOptions.level"},"~TextFormatterOptions.level":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.level","file":".","doc":"The log level format.  This can be one of the following:\"ABBR\": The log level abbreviation in uppercase (e.g., \"INF\").\"FULL\": The full log level name in uppercase (e.g., \"INFO\").\"L\": The first letter of the log level in uppercase (e.g., \"I\").\"abbr\": The log level abbreviation in lowercase (e.g., \"inf\").\"full\": The full log level name in lowercase (e.g., \"info\").\"l\": The first letter of the log level in lowercase (e.g., \"i\").Alternatively, this can be a function that accepts a log level and returns a string.The default is \"ABBR\".","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.level","deprecated":false,"label":"level"},"TextFormatterOptions.category":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.category","file":".","doc":"The separator between category names.  For example, if the separator is \"·\", the category [\"a\", \"b\", \"c\"] will be formatted as \"a·b·c\". The default separator is \"·\".If this is a function, it will be called with the category array and should return a string, which will be used for rendering the category.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.category","deprecated":false,"label":"TextFormatterOptions.category"},"~TextFormatterOptions.category":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.category","file":".","doc":"The separator between category names.  For example, if the separator is \"·\", the category [\"a\", \"b\", \"c\"] will be formatted as \"a·b·c\". The default separator is \"·\".If this is a function, it will be called with the category array and should return a string, which will be used for rendering the category.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.category","deprecated":false,"label":"category"},"TextFormatterOptions.value":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.value","file":".","doc":"The format of the embedded values.A function that renders a value to a string.  This function is used to render the values in the log record.  The default is util.inspect() in Node.js/Bun and Deno.inspect() in Deno.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.value","deprecated":false,"label":"TextFormatterOptions.value"},"~TextFormatterOptions.value":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.value","file":".","doc":"The format of the embedded values.A function that renders a value to a string.  This function is used to render the values in the log record.  The default is util.inspect() in Node.js/Bun and Deno.inspect() in Deno.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.value","deprecated":false,"label":"value"},"TextFormatterOptions.format":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.format","file":".","doc":"How those formatted parts are concatenated.A function that formats the log record.  This function is called with the formatted values and should return a string.  Note that the formatted should not include a newline character at the end.By default, this is a function that formats the log record as follows:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.format","deprecated":false,"label":"TextFormatterOptions.format"},"~TextFormatterOptions.format":{"id":"namespace_TextFormatterOptions","kind":[{"char":"p","kind":"Property","title":"Property"}],"name":"TextFormatterOptions.format","file":".","doc":"How those formatted parts are concatenated.A function that formats the log record.  This function is called with the formatted values and should return a string.  Note that the formatted should not include a newline character at the end.By default, this is a function that formats the log record as follows:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/TextFormatterOptions.format","deprecated":false,"label":"format"},"ansiColorFormatter":{"id":"namespace_ansiColorFormatter","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"ansiColorFormatter","file":".","doc":"A text formatter that uses ANSI colors to format log records.A preview of ansiColorFormatter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/ansiColorFormatter","deprecated":false,"label":"ansiColorFormatter"},"compareLogLevel()":{"id":"namespace_compareLogLevel","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"compareLogLevel","file":".","doc":"Compares two log levels.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/compareLogLevel","deprecated":false,"label":"compareLogLevel()"},"configure()":{"id":"namespace_configure","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"configure","file":".","doc":"Configure the loggers with the specified configuration.Note that if the given sinks or filters are disposable, they will be disposed when the configuration is reset, or when the process exits.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/configure","deprecated":false,"label":"configure()"},"defaultConsoleFormatter()":{"id":"namespace_defaultConsoleFormatter","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"defaultConsoleFormatter","file":".","doc":"The default console formatter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/defaultConsoleFormatter","deprecated":false,"label":"defaultConsoleFormatter()"},"defaultTextFormatter":{"id":"namespace_defaultTextFormatter","kind":[{"char":"v","kind":"Variable","title":"Variable"}],"name":"defaultTextFormatter","file":".","doc":"The default text formatter.  This formatter formats log records as follows:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/defaultTextFormatter","deprecated":false,"label":"defaultTextFormatter"},"dispose()":{"id":"namespace_dispose","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"dispose","file":".","doc":"Dispose of the disposables.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/dispose","deprecated":false,"label":"dispose()"},"getAnsiColorFormatter()":{"id":"namespace_getAnsiColorFormatter","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getAnsiColorFormatter","file":".","doc":"Get an ANSI color formatter with the specified options.A preview of an ANSI color formatter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/getAnsiColorFormatter","deprecated":false,"label":"getAnsiColorFormatter()"},"getConfig()":{"id":"namespace_getConfig","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getConfig","file":".","doc":"Get the current configuration, if any.  Otherwise, null.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/getConfig","deprecated":false,"label":"getConfig()"},"getConsoleSink()":{"id":"namespace_getConsoleSink","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getConsoleSink","file":".","doc":"A console sink factory that returns a sink that logs to the console.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/getConsoleSink","deprecated":false,"label":"getConsoleSink()"},"getFileSink()":{"id":"namespace_getFileSink","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getFileSink","file":".","doc":"Get a file sink.Note that this function is unavailable in the browser.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/getFileSink","deprecated":false,"label":"getFileSink()"},"getLevelFilter()":{"id":"namespace_getLevelFilter","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getLevelFilter","file":".","doc":"Returns a filter that accepts log records with the specified level.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/getLevelFilter","deprecated":false,"label":"getLevelFilter()"},"getLogger()":{"id":"namespace_getLogger","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getLogger","file":".","doc":"Get a logger with the given category.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/getLogger","deprecated":false,"label":"getLogger()"},"getRotatingFileSink()":{"id":"namespace_getRotatingFileSink","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getRotatingFileSink","file":".","doc":"Get a rotating file sink.This sink writes log records to a file, and rotates the file when it reaches the maxSize.  The rotated files are named with the original file name followed by a dot and a number, starting from 1.  The number is incremented for each rotation, and the maximum number of files to keep is maxFiles.Note that this function is unavailable in the browser.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/getRotatingFileSink","deprecated":false,"label":"getRotatingFileSink()"},"getStreamSink()":{"id":"namespace_getStreamSink","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getStreamSink","file":".","doc":"A factory that returns a sink that writes to a WritableStream.Note that the stream is of Web Streams API, which is different from Node.js streams.  You can convert a Node.js stream to a Web Streams API stream using stream.Writable.toWeb() method.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/getStreamSink","deprecated":false,"label":"getStreamSink()"},"getTextFormatter()":{"id":"namespace_getTextFormatter","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"getTextFormatter","file":".","doc":"Get a text formatter with the specified options.  Although it's flexible enough to create a custom formatter, if you want more control, you can create a custom formatter that satisfies the TextFormatter type instead.For more information on the options, see TextFormatterOptions.By default, the formatter formats log records as follows:","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/getTextFormatter","deprecated":false,"label":"getTextFormatter()"},"isLogLevel()":{"id":"namespace_isLogLevel","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"isLogLevel","file":".","doc":"Checks if a string is a valid log level.  This function can be used as as a type guard to narrow the type of a string to a LogLevel.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/isLogLevel","deprecated":false,"label":"isLogLevel()"},"parseLogLevel()":{"id":"namespace_parseLogLevel","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"parseLogLevel","file":".","doc":"Parses a log level from a string.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/parseLogLevel","deprecated":false,"label":"parseLogLevel()"},"reset()":{"id":"namespace_reset","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"reset","file":".","doc":"Reset the configuration.  Mostly for testing purposes.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/reset","deprecated":false,"label":"reset()"},"toFilter()":{"id":"namespace_toFilter","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"toFilter","file":".","doc":"Converts a FilterLike value to an actual Filter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/toFilter","deprecated":false,"label":"toFilter()"},"withContext()":{"id":"namespace_withContext","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"withContext","file":".","doc":"Runs a callback with the given implicit context.  Every single log record in the callback will have the given context.If no contextLocalStorage is configured, this function does nothing and just returns the return value of the callback.  It also logs a warning to the [\"logtape\", \"meta\"] logger in this case.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/withContext","deprecated":false,"label":"withContext()"},"withFilter()":{"id":"namespace_withFilter","kind":[{"char":"f","kind":"Function","title":"Function"}],"name":"withFilter","file":".","doc":"Turns a sink into a filtered sink.  The returned sink only logs records that pass the filter.","url":"https://jsr.io/@logtape/logtape@0.8.2/doc/~/withFilter","deprecated":false,"label":"withFilter()"}}}